module PregenKeys where

import qualified Crypto.PubKey.RSA as RSA
import qualified Crypto.PubKey.DSA as DSA
import qualified Crypto.PubKey.DH as DH
import qualified Crypto.PubKey.ECC.ECDSA as ECDSA
import qualified Crypto.Types.PubKey.ECC as ECC

rsaPrivatekey = RSA.PrivateKey
    { RSA.private_pub  = rsaPublickey
    , RSA.private_d    = 133764127300370985476360382258931504810339098611363623122953018301285450176037234703101635770582297431466449863745848961134143024057267778947569638425565153896020107107895924597628599677345887446144410702679470631826418774397895304952287674790343620803686034122942606764275835668353720152078674967983573326257
    , RSA.private_p    = 12909745499610419492560645699977670082358944785082915010582495768046269235061708286800087976003942261296869875915181420265794156699308840835123749375331319
    , RSA.private_q    = 10860278066550210927914375228722265675263011756304443428318337179619069537063135098400347475029673115805419186390580990519363257108008103841271008948795129
    , RSA.private_dP   = 5014229697614831746694710412330921341325464081424013940131184365711243776469716106024020620858146547161326009604054855316321928968077674343623831428796843
    , RSA.private_dQ   = 3095337504083058271243917403868092841421453478127022884745383831699720766632624326762288333095492075165622853999872779070009098364595318242383709601515849
    , RSA.private_qinv = 11136639099661288633118187183300604127717437440459572124866697429021958115062007251843236337586667012492941414990095176435990146486852255802952814505784196
    }

rsaPublickey = RSA.PublicKey
    { RSA.public_size = 128
    , RSA.public_n    = 140203425894164333410594309212077886844966070748523642084363106504571537866632850620326769291612455847330220940078873180639537021888802572151020701352955762744921926221566899281852945861389488419179600933178716009889963150132778947506523961974222282461654256451508762805133855866018054403911588630700228345151
    , RSA.public_e    = 65537
    }

dsaParams = DSA.Params { DSA.params_p = p, DSA.params_g = g, DSA.params_q = q }
    where
        p = 0x00a8c44d7d0bbce69a39008948604b9c7b11951993a5a1a1fa995968da8bb27ad9101c5184bcde7c14fb79f7562a45791c3d80396cefb328e3e291932a17e22edd
        g = 0x0bf9fe6c75d2367b88912b2252d20fdcad06b3f3a234b92863a1e30a96a123afd8e8a4b1dd953e6f5583ef8e48fc7f47a6a1c8f24184c76dba577f0fec2fcd1c
        q = 0x0096674b70ef58beaaab6743d6af16bb862d18d119

dsaPrivatekey = DSA.PrivateKey
    { DSA.private_params = dsaParams
    , DSA.private_x      = 0x229bac7aa1c7db8121bfc050a3426eceae23fae8
    }

dsaPublickey = DSA.PublicKey
    { DSA.public_params = dsaParams
    , DSA.public_y      = 0x4fa505e86e32922f1fa1702a120abdba088bb4be801d4c44f7fc6b9094d85cd52c429cbc2b39514e30909b31e2e2e0752b0fc05c1a7d9c05c3e52e49e6edef4c
    }

ecdsaCurveP = ECC.getCurveByName ECC.SEC_p160r1

ecdsaPrivatekeyP = ECDSA.PrivateKey ecdsaCurveP 971761939728640320549601132085879836204587084162

ecdsaPrivatekeySlowP = ECDSA.PrivateKey ecdsaCurveP 0

ecdsaPublickeyP = ECDSA.PublicKey
     ecdsaCurveP
    (ECC.Point 466448783855397898016055842232266600516272889280
               1110706324081757720403272427311003102474457754220)

ecdsaCurveB = ECC.getCurveByName ECC.SEC_t163k1

ecdsaPrivatekeyB = ECDSA.PrivateKey ecdsaCurveB 5321230001203043918714616464614664646674949479949

ecdsaPrivatekeySlowB = ECDSA.PrivateKey ecdsaCurveB 0

ecdsaPublickeyB = ECDSA.PublicKey
    ecdsaCurveB
   (ECC.Point 0x37d529fa37e42195f10111127ffb2bb38644806bc
              0x447026eee8b34157f3eb51be5185d2be0249ed776)
